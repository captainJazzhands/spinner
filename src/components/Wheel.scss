@use "./GameShow.scss";
@use "sass:color";

/* Colors */
$clr_TimelineBG: GameShow.$clr_formBG;
$clr_TimelineTick: GameShow.$clr_dark_solid;
$clr_WheelBG: color.adjust(GameShow.$clr_secondaryColor, $alpha: -0.3);
$clr_TimelineStart: hsla(120,80%,50%,0.7);
$clr_TimelineEnd: hsla(0,80%,50%,0.7);
/* end Colors */

/* Sizes */
$sz_TimelineSpace: 5px;
$sz_TimelineTick: .5px;
$sz_TimelineBall: 5vh;
/* end Sizes */

.topStrip.interfaceItem,
.bottomStrip.interfaceWrapper {
	border-radius: 0;
}

$facetCount: 12;
$facetSlice: 360deg/$facetCount;
$facetHeight: 20vw * 2;
$wheelHeight: $facetHeight * 1.25;
$wheelWidth: $facetHeight * 2.5;

// $tranZ: Math.round( ($facetHeight / 2) / ( Math.tan( ( ( Math.PI * 2 ) / $faceCount ) / 2 ) ) );
// $tranZ: (0.5 * $facetHeight) / Math.tan( ( Math.PI / $faceCount ) ) * 1vw;
$tranZ: 37.34vw * 2;
$transRotX: 30deg;
//$transRotY: 0deg;
//$transRotZ: 0deg;

//@for $facet from 1 through 12 {
//	//.WheelFacet:nth-child(#{$facet}) {
//	.WheelFacet {
//		transform: rotateY(($facet * $facetSlice) - $facetSlice) translateZ($tranZ) translateY($facetHeight) rotateZ(90deg);
//		//transform-origin: left $facetHeight;
//	}
//}

$rx: 10deg;
$rY: 10deg;
$rZ: 10deg;

@mixin spinWheel() {
	@for $facet from 1 through $facetCount {
		#{".wheelWrapper .hotFacet" + $facet } {
			//transform:
			//translateX( $facet * -$facetHeight/3 )
			//rotateX($facet * -12deg),
			//rotateZ($facet * 3deg);
		}
		//$transRotX: -30deg * $facet;
	}
}

@mixin gainPerspective() {
	@for $i from -40 through 40 {
		.wheelWrapper.perspective#{$i} {
			//transform:
			//	 translateZ($i * 6vw)
			//	 rotateX($i  * -12deg)
			//	 rotateY($i  * 4deg);
			transform-style: preserve-3d;
		}
		.flapWrapper.perspective#{$i} {
			left: $i * 2vw;
			transform-style: preserve-3d;
		}
		//$transRotY: 45deg * $i;
	}
}

@mixin rotateFacets() {
	@for $facet from 1 through $facetCount {
		#{".wheelWrapper #facet" + $facet } {
			transform-style: preserve-3d;
			//transform:
			//	 //translateX( $facetHeight * 1.5 );
			//	 //translateY( $facet * $tranZ/15 )
			//	 rotate3d($facet * .5, $facet * .25, .4, $facet * 2deg);
			//rotateY( $facet  * -30deg )
			//rotateZ( $facet  * 15deg );
			transform-origin: -$facetHeight -$facetHeight;
		}
		#{".flapWrapper #facet" + $facet } {
			transform-style: preserve-3d;
			transform: 
				scale(1 - ($facet * .015)
			);
			transform-origin: center;
			opacity: $facet * .1;
		}
	}
}

@include spinWheel();
@include rotateFacets();
@include gainPerspective();

.flapWrapper,
.wheelWrapper {
	transition: ease-in-out 0.3s;
	.wheel {
		z-index: 10;
		visibility: hidden;
		position: relative;
		transform-style: preserve-3d;
		transform-origin: center;
		//background-color: hsla(120, 50%, 50%, 0.3);
		margin: 0;
		padding: 0;
	}
	.WheelFacet {
		visibility: visible;
		position: fixed;
		transform-style: preserve-3d;
		border-radius: 0;
		margin: 0;
		padding: 0;
		text-align: center;
		overflow: hidden;
	}
}

.wheelWrapper {
	top: 0; left: 0;
	width: $wheelWidth;
	height: $wheelHeight;
	//animation: softSpin 1s ease normal 2 none running;
	.wheel {
		width: $wheelWidth;
		height: $wheelHeight;
		transition: ease-in-out 0.3s;
	}
	.WheelFacet {
		background-color: $clr_WheelBG;
		border: 0 solid black; //   hsla(240,80,80,0.9);
		border-radius: 0;
		height: $facetHeight;
		width: $facetHeight * 2;
		opacity: 1;
		box-shadow: black 1vw 1vw 4vw;
	}
}

.flapWrapper {
	width: $wheelWidth;
	height: $wheelHeight;
	//animation: softSpin 1s ease normal 2 none running;
	.wheel {
		top: 0; left: 0;
		width: $wheelWidth;
		height: $wheelHeight;
		transition: ease-in-out 0.3s;
	}
	.WheelFacet {
		background-color: color.adjust(GameShow.$clr_secondaryColor, $alpha: -0.3);
		border: 0 solid black; //   hsla(240,80,80,0.9);
		border-radius: 0;
		height: $facetHeight;
		width: $facetHeight * 2;
		opacity: 1;
		box-shadow: GameShow.$clr_formShadow 1vw 1vw 4vw;
	}
}

.facetContent {
	display: grid;
	background-color: lightgray;
	height: $facetHeight;
	width: $facetHeight * 2;
	p {
		padding: .7em;
		color: black;
		font-family: "Garamond", serif;
	}
}

.topStrip {
	grid-column: 1 / 2;
	grid-row: 1;
	background-color: color.adjust(GameShow.$clr_secondaryColor, $alpha: -0.8);
	width: 50%;
	left: 0;
}

.middleStrip {
	grid-column: 1 / 2;
	grid-row: 2;
	height: 85%;
	width: 100%;
	overflow: hidden;
	.bodyCopy {
		float: left;
		width: 50%;
		padding: 1vw;
		font-size: 1.75vh;
		line-height: 115%;
		text-align: left;
	}
	.hero {
		width: 50%;
		height: 100%;
		float: right;
		overflow: hidden;
		//border-radius: .5vw;
		img,
		video {
			width: 100%;
			height: auto;
			position: relative;
			right: 1vw;
			top: 0;
		}
	}
}

.employer {
	float: right; right: 0;
	width: 50%; height: 100%;
}

.employer,
.title {
	font-size: 2.5vh;
	color: black;
	text-shadow: GameShow.$clr_formShadow 5px 5px;
}

.bottomStrip {
	grid-column: 1 / 2;
	grid-row: 3;
	background-color: color.adjust(GameShow.$clr_secondaryColor, $alpha: -0.8);
	width: 100%;
	left: 0;
	right: 0;
}

.timeLine {
	width: 50%; height: 100%;
	left: 0;
	padding: .1vw;
	overflow: hidden;
	.startShape,
	.endShape {
		position: absolute;
		width: $sz_TimelineBall / 3;
		height: 100%;
		//overflow: hidden;
	}
	.startShape,
	.startShape:before {
		color: black;
		//border: $sz_TimelineSpace solid $clr_TimelineStart;
		background-color: $clr_TimelineStart;
	}
	.endShape,
	.endShape:before {
		color: white;
		border: $sz_TimelineTick solid $clr_TimelineEnd;
		background-color: $clr_TimelineEnd;
	}
	.startShape:before,
	.endShape:before {
		//z-index: 900;
		content: "â€¢";
		position: absolute;
		top: 0;
		left: $sz_TimelineBall / -3;
		border-radius: 0 0 $sz_TimelineBall $sz_TimelineBall;
		width: 3em;
		height: 1.5em;
	}
	.startShape {
		left: 26.28px;
	}
	.endShape {
		right: calc(50% + 26.28px);
	}
}

.topStrip,
.bottomStrip {
	height: 5vw;
	div {
		display: inline-block;
	}
}

@mixin tickMonths() {
	@for $tick from 10 through 120 {
		#{".timeLine.ticks" + $tick } {
			background: repeating-linear-gradient(
						to right,
						$clr_TimelineTick,
						$clr_TimelineBG 2px,
						$clr_TimelineBG $tick * .19px
			);
		}
	}
}

@include tickMonths();

@keyframes spin {
	0%, 100% {
		//transform: rotateX(-180deg) rotateY(-20deg) rotateZ(-80deg);
	}
	50% {
		//transform: rotateX(180deg) rotateY(20deg) rotateZ(-100deg);
	}
}

@keyframes softSpin {
	0%, 100% {
		//transform: rotateY(-2deg) rotateZ(-85deg);
	}
	50% {
		//transform: rotateY(2deg) rotateZ(-95deg);
	}
}

@keyframes goto10 {
	0% {
		//transform: rotateX(0deg) rotateY(-20deg) rotateZ(-80deg);
	}
	100% {
		//transform: rotateX(0deg) rotateY(20deg) rotateZ(-100deg);
	}
}

$floaterColor: hsla(240, 80%, 80%, 0.3);
.floater {
	position: fixed;
	visibility: visible;
	transform-style: preserve-3d;
	transform: translateX(-$facetHeight);
	//translateZ($facetHeight / -4);
	left: 20%;
	top: 20%;
	width: $facetHeight * 2;
	height: $facetHeight * 2;
	border: 1px solid $floaterColor;
	border-radius: $facetHeight / 10;
	background-color: $floaterColor;
}
