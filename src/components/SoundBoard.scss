@import "GameShow";

$sz_buttonBoardWidth: 40rem;
$sz_buttonBoardHeight: $sz_buttonBoardWidth * .75;

:root {
	--scroll-distance: 2em;
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 300;
	//src: url("fonts/LCD-mono-Light.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Light.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Light.ttf") format("truetype"); /* Safari, Android, iOS */
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 500;
	//src: url("fonts/LCD-mono-Normal.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Normal.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Normal.ttf") format("truetype"); /* Safari, Android, iOS */
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 700;
	//src: url("fonts/LCD-mono-Ultra.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Ultra.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Ultra.ttf") format("truetype"); /* Safari, Android, iOS */
}

h1, h2, h3, h4, h5, h6, button {
	color: $clr_white;
	text-shadow: black .1rem .1rem .2rem;
	text-align: center;
}

button {
	margin: 0;
	padding: 0;
	white-space: nowrap;
	overflow: hidden;
	border: none;
	border-radius: 0;
	width: 100%; height: 100%;
	min-width: 3em; min-height: 3rem;
	text-transform: uppercase;
	font-weight: 900;
	transition: ease-in .3s 0.4s;
	background-color: $clr_formBG;
	box-shadow: inset $clr_formShadow .2rem .2rem .8rem;
}

button:active {
	box-shadow: red .15rem .15rem .6rem;
}

button:focus {
	box-shadow: yellow .1rem .1rem .4rem;
}

button:hover {
	box-shadow: white .01rem .01rem 1rem;
}

button:disabled {
	box-shadow: none;
	opacity: 0.5;
}

.pageLayout {
	width: 100vw; height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.box {
	margin: 1rem;
	//padding: 1rem;
	display: flex;
	align-items: center;
	align-content: center;
	width: 100%;
	height: 100%;
	max-width: 95vw;
	overflow: hidden;
	background-color: $clr_boxBG;
	border-radius: 1rem;
	border: 1px solid white;
	transition: ease-in .3s 0.7s;
	ul, div {
		transition: ease-in .3s 0.4s;
		font-size: 1.5vw;
		text-align: center;
		flex-grow: 0;
		flex-shrink: 1;
		//min-width: 2em;
		//max-width: 5em;
		overflow: hidden;
		white-space: nowrap;
		background-color: $clr_primaryColor;
		color: $clr_white;
		border-radius: 1rem;
		border: 1px solid white;
	}
	div {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-around;
		flex-wrap: nowrap;
		//border: $soundBorder;
		margin: .75rem;
		background-color: $clr_formBG;
		p {

		}
	}
	h1 {
		color: $clr_primaryColor;
		-webkit-text-stroke: .025rem $clr_black;
		text-shadow: $clr_formShadow .1rem .1rem .2rem;
		top: 0;
		margin-top: 0;
		padding: .5rem;
		width: 100%;
		border-radius: 2rem 2rem 0 0;
	}
}

#buttonBoard {
	width: 100%;
	height: 200%;
	flex-direction: column;
	@media (min-width: 640px) {
		flex-direction: column;
	}
}

#stroopSwitch {
	flex-direction: column;
	@media (min-width: 640px) {
		flex-direction: row;
	}
	.mode {
		flex-direction: row;
		@media (min-width: 640px) {
			flex-direction: column;
		}
		button {
			flex-shrink: 10;
			flex-grow: 10;
		}
	}
	.voice,
	.language {
		max-height: 20vh;
		height: auto;
		overflow: scroll;
		flex-shrink: 10;
		flex-grow: 0;
		flex-direction: row;
		@media (min-width: 640px) {
			flex-direction: column;
		}
		button {
			height: auto;
			width: auto;
			min-width: 4em;
			margin: 3pt 1pt;
			padding: 2pt 1pt;
			line-height: 90%;
			//flex-grow: 0;
			//flex-shrink: 1;
			color: black;
			text-shadow: none;
		}
	}
}

#SoundBoardStatus,
#CurrentButton {
	flex-direction: column;
	@media (min-width: 640px) {
		flex-direction: row;
	}
}

//background: none;
//width: $sz_buttonBoardWidth;
//height: $sz_buttonBoardHeight;
//position: absolute;
//left: calc((100vw - #{$sz_buttonBoardWidth}) / 2);
//right: calc((100vw - #{$sz_buttonBoardWidth}) / 2);
//top: calc((100vh - #{$sz_buttonBoardHeight}) / 2);
//bottom: calc((100vh - #{$sz_buttonBoardHeight}) / 2);


//#TheSession,
//#CurrentButton {
//	flex-direction: column;
//}

#TheButtons {
	border-radius: 0;
	width: 100%;
	flex-shrink: 10;
	flex-grow: 0;
	button {
		width: 100%; height: 1000px;
		margin: 0;
		border: none;
		border-radius: 0;
		box-shadow: inset 3px 3px 5px $clr_formShadow;
		:hover {
			box-shadow: 7px 7px 10px $clr_formShadow;
		}
		:active {
			box-shadow: inset 7px 7px 10px $clr_formShadow;
		}
	}

}

.LCD {
	//min-width: 8em;
	//border: 4px solid #1a231a;
	background-color: #526652;
	color: #1a231a;
	overflow: hidden !important;
	border-radius: .5rem;
	padding: .5rem;
	//clip-path: polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%);
	box-shadow: inset 0.1vh 0.1vh 1vw #1a231a;
}

p.LCD {
	font-family: "LCD Mono", monospace;
	line-height: 90%;
	color: #1a231a;
	//font-size: 4vw;
	white-space: nowrap;
	margin: 0;
}

.meta {
	padding: 6pt;
}

.Countdown {
	width: 100%;
	border: 1px solid white;
	display: flex;
	flex-direction: row;
	align-items: center;
	align-content: space-evenly;
	button {
		text-align: center;
		word-spacing: .25em;
		letter-spacing: .25em;
	}
}

#ListWrapper {
	height: 6rem;
	border: 1px solid black;
	overflow: hidden;
	transition: ease-in .3s 0.4s;
	ul.scroller {
		display: flex;
		flex-direction: row;
		position: relative;
		transition: ease-in .3s 0.4s;
		//top: var(--scroll-distance);
		left: calc(var(--item-count) * -4em);
		flex-grow: 0; flex-shrink: 0;
		max-width: 90vw;
		li {
			height: 4rem;
			width: auto;
			max-height: 2rem;
			min-height: 2rem;
			flex-grow: 10;
			flex-shrink: 10;
			transition: ease-in .3s 0.4s;
		}
	}
}

[data-dg="1"] { --dg: 1; }

.props {
	--dg: 1;
	width: calc(100px * var(--dg));
	//width: calc(attr(data-gap) * .05px) !important;
	max-width: unset !important;
	min-width: unset !important;
}

.props::after {
	content: attr(data-gap);
	width: calc(attr(data-gap) * 1px) !important;
}

.recording {
	transition: ease-in .3s 0.4s;
	background-color: red !important;
}

.playing {
	transition: ease-in .3s 0.4s;
	background-color: green !important;
}

.stopped,
.cold {
	transition: ease-in .3s 0.4s;
}


.gray {background-color: gray;}

.white {background-color: white;}

.brown {background-color: brown;}

.black {background-color: black;}

.red {background-color: red;}

.yellow {background-color: yellow;}

.orange {background-color: orange;}
