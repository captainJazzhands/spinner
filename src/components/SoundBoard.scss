@import "GameShow";

//$sz_buttonBoardWidth: 40rem;
//$sz_buttonBoardHeight: $sz_buttonBoardWidth * .75;

$clr_stroop-unsure: black;
$clr_stroop-text: hsl(240, 80%, 40%);
$clr_stroop-speech: hsl(270, 80%, 40%);
$clr_stroop-color: hsl(0, 80%, 50%);
$clr_stroop-shape: rebeccapurple;
$clr_stroop-sound: hsl(120, 70%, 70%);
$clr_stroop-tone: hsl(180, 80%, 40%);

$sz_COLD: 1.6rem;
$sz_HOT: 75vh;

:root {
	--scroll-distance: 2em;
	font-size: 18pt;
	* { font-size: 12pt; }
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 300;
	//src: url("fonts/LCD-mono-Light.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Light.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Light.ttf") format("truetype"); /* Safari, Android, iOS */
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 500;
	//src: url("fonts/LCD-mono-Normal.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Normal.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Normal.ttf") format("truetype"); /* Safari, Android, iOS */
}

@font-face {
	font-family: "LCD Mono";
	font-weight: 700;
	//src: url("fonts/LCD-mono-Ultra.woff2") format("woff2"), /* Super Modern Browsers */
	src: url("fonts/LCD-mono-Ultra.woff") format("woff"), /* Pretty Modern Browsers */
	url("fonts/LCD-mono-Ultra.ttf") format("truetype"); /* Safari, Android, iOS */
}

h1, h2, h3, h4, h5, h6, button {
	color: $clr_white;
	text-shadow: black .1rem .1rem .2rem;
	text-align: center;
}

button {
	margin: 0;
	padding: 0 .125rem;
	white-space: nowrap;
	overflow: hidden;
	border: none;
	border-radius: 0;
	min-width: 3em; min-height: 1.5rem;
	text-transform: uppercase;
	font-weight: 900;
	transition: ease-in .3s 0.14s;
	background-color: $clr_formBG;
	opacity: 0.85;
	box-shadow: inset $clr_formShadow .1rem .1rem .4rem;
	&.texty {
		box-shadow: none !important;
		background: none !important;
		padding: 0 .25rem !important;
		height: 3rem !important;
		overflow: scroll;
		scrollbar-width: thin;
		text-transform: unset;
		font-weight: unset;
		white-space: unset;
	}
}

.tintable button {
	padding: 3pt 9pt;
	//border: 1px solid white;
	//border-radius: 6pt;
}

button:focus {
	box-shadow: yellow .1rem .1rem .4rem;
}

button.selected {
	opacity: 1;
	box-shadow: white .01rem .01rem 1rem;
}

button:disabled {
	box-shadow: none;
	opacity: 0.5;
	//pointer-events: none;
}

#pageLayout {
	width: 100vw; height: 99.9vh;
	max-height: 99.9vh;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.box {
	margin: 2vw;
	display: flex;
	flex-direction: column;
	align-items: center;
	align-content: stretch;
	width: 100%;
	max-width: 95vw;
	//height: 100%;
	//height: calc(100vh - 10vw);
	max-height: calc(100vh - 10vw);
	background-color: $clr_InterfaceBG;
	overflow-x: hidden;
	overflow-y: auto;
	border-radius: 1rem;
	border: 2pt solid white;
	transition: ease-in .3s 0.007s;
	ul:nth-child(2),
	div:nth-child(2),
	section:nth-child(2) {
		transition: ease-in .3s 0.004s;
		text-align: center;
		flex-grow: 0;
		flex-shrink: 0;
		overflow: hidden;
		white-space: nowrap;
		//background-color: $clr_primaryColor;
		color: $clr_white;
	}

	////div {
	////	display: flex;
	////	flex-direction: row;
	////	align-items: center;
	////	justify-content: space-around;
	////	flex-wrap: nowrap;
	////	//border: $soundBorder;
	////	margin: .75rem;
	////	//background-color: $clr_tileBG;
	////	//border: 1px solid $clr_formBorder;
	////	p {
	////
	////	}
	//}

	h1 {
		color: $clr_primaryColor;
		-webkit-text-stroke: .025rem $clr_black;
		text-shadow: $clr_formShadow .1rem .1rem .2rem;
		top: 0;
		margin-top: 0;
		padding: .5rem;
		width: 100%;
		border-radius: 2rem 2rem 0 0;
	}
}


.HOT {
	height: $sz_HOT;
	flex-grow: 5;
	flex-shrink: 1;
}

.MEDIUM {
	min-height: 20vh;
	flex-grow: 2;
	flex-shrink: 2;
	button {
		//height: 200%;
	}
}

.COLD {
	height: $sz_COLD;
	flex-grow: 0;
	flex-shrink: 0;
	overflow-y: hidden;
	button {
		height: 50%;
	}
	ul:nth-child(2),
	div:nth-child(2),
	section:nth-child(2) {
		//margin-top: -1.6rem;
	}
	.tintable {
		opacity: 0.65;
		filter: blur(1.5px);
	}
}

.buttonTile {
	list-style-type: none;
	display: flex;
	flex-direction: row;
	height: auto;
	max-height: 25vh;
	width: 100%;
	overflow: scroll;
	button {
		flex-direction: column;
		border: 1px solid $clr_white;
		color: $clr_black;
		text-shadow: none;
		background-color: $clr_white !important;
		margin: 1rem;
		padding: .5rem;
		white-space: break-spaces;
		height: fit-content;
		overflow: scroll;
		.shortName {
			font-size: 12pt;
			text-transform: capitalize;
		}
		.longName {
			font-size: 9pt;
			width: 100%;
		}
	}
	button:nth-child(1) {
		border-radius: 1rem 0 0 0;
	}
	button:nth-last-child(1) {
		border-radius: 0 1rem 0 0;
	}
}

#DataSelectorComponent {
	display: flex;
	flex-direction: column;
	flex-basis: content-box;
	//button {
	//	width: 80%;
	//	max-height: 6rem;
	//}
}

#stroopSwitch {
	width: 100%;
	min-height: $sz_COLD;
	height: $sz_COLD;
	max-height: $sz_COLD;
	.instruction {
		z-index: 1;
		display: none;
	}
	button {
		//writing-mode: vertical-lr;
		//transform: rotateZ(-90deg);
		flex: 10 1 auto;
		width: 31.5vw;
		font-size: 150%;
		padding: 3pt;
		z-index: 100;
	}
}

#stroopSwitch.COLD {
	flex-shrink: 0;
	flex-grow: 0;
	z-index: 100;
	#stroopButtons {
		height: $sz_COLD;
		z-index: 100;
	}
}

.DataSelectorList {
	height: 100%;
	display: grid;
	grid-template-columns: repeat(4, .1fr);
	grid-template-rows: repeat(2, .1fr);
	align-content: stretch;
	padding-left: 0;
	li {
		color: white;
		//border: 1px solid white;
		list-style: none;
		font-size: 12pt;
		padding: 10pt 2pt;
		text-transform: capitalize;
		text-align: center;
	}
}

.HOT .DataSelectorList {
	//margin-top: $sz_COLD;
}

#VoiceChoice {
	flex-direction: column;
	ul {
		width: 90%;
		grid-template-columns: repeat(4, .1fr);
		grid-template-rows: repeat(2, .1fr);
		li {
			padding: 2pt 2pt;
			button {
				min-width: unset;
				min-height: unset;
				background: none;
				border: 1px solid black;
				border-radius: 5pt;
			}
		}
	}
}

#PartsOfSpeechList {
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(2, 1fr);
}

.unsure,
.text,
.speech,
.color,
.shape,
.sound,
.tone { transition: ease-in .25s 0.01s; }

.unsure,
.unsure .tintable button {background-color: $clr_stroop-unsure;}

.text,
.text .tintable button {background-color: $clr_stroop-text;}

.speech,
.speech .tintable button {background-color: $clr_stroop-speech;}

.color,
.color .tintable button {background-color: $clr_stroop-color;}

.shape,
.shape .tintable button {background-color: $clr_stroop-shape;}

.sound,
.sound .tintable button {background-color: $clr_stroop-sound;}

.tone,
.tone .tintable button {background-color: $clr_stroop-tone;}

#SoundBoardStatus {
	flex-grow: 5;
	overflow: hidden;
}

#SoundBoardStatus,
#CurrentButton {
	flex-direction: column;
	@media (min-width: 640px) {
		//flex-direction: row;
	}
}

//background: none;
//width: $sz_buttonBoardWidth;
//height: $sz_buttonBoardHeight;
//position: absolute;
//left: calc((100vw - #{$sz_buttonBoardWidth}) / 2);
//right: calc((100vw - #{$sz_buttonBoardWidth}) / 2);
//top: calc((100vh - #{$sz_buttonBoardHeight}) / 2);
//bottom: calc((100vh - #{$sz_buttonBoardHeight}) / 2);

#buttonBoard {
	display: flex;
	flex-direction: column;
}

#TheButtons {
	border-radius: 0;
	width: 100%;
	height: 100%;
	flex-direction: column;
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-template-rows: auto;
	button {
		height: 100%;
		margin: 0;
		border: none;
		border-radius: 0;
		box-shadow: inset 3px 3px 5px $clr_formShadow;
		//:hover {
		//	box-shadow: 7px 7px 10px $clr_formShadow;
		//}
		//:active {
		//	box-shadow: inset 7px 7px 10px $clr_formShadow;
		//}
	}
}

.LCD {
	//min-width: 8em;
	//border: 4px solid #1a231a;
	background-color: #526652;
	color: #1a231a;
	overflow-x: scroll !important;
	overflow-y: hidden !important;
	border-radius: .5rem;
	padding: .5rem;
	//clip-path: polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%);
	box-shadow: inset 0.1vh 0.1vh 1vw #1a231a;
}

p.LCD {
	font-family: "LCD Mono", monospace;
	//font-size: 15pt;
	line-height: 90%;
	text-transform: uppercase;
	color: #1a231a;
	display: inline;
	white-space: nowrap;
	margin: 0;
}

.meta {
	padding: 6pt;
}

.Countdown {
	width: 100%;
	border: 1px solid white;
	display: flex;
	flex-direction: row;
	align-items: center;
	align-content: space-evenly;
	button {
		text-align: center;
		word-spacing: .25em;
		letter-spacing: .25em;
	}
}

#RecordingSession {
	width: 100%;
	ul {
		margin: 0;
		padding: 0;
		width: 100%;
		overflow-y: scroll;
		li {
			display: flex;
			flex-direction: row;
			.sequence-commands {
				flex-grow: 0.5;
				flex-shrink: 1;
				margin: .25rem .25rem;
				button {
					border-radius: .25rem;
					background-color: $clr_InterfaceBG_alpha;
				}
			}
			.sequence-info {
				width: 100%;
				display: flex;
				flex-direction: column;
				flex-grow: 1;
				flex-shrink: 1;
			}
			text-align: left;
			margin: .25rem 0;
			background-color: $clr_boxBG_alpha;
			.mini-list {
				display: flex;
				flex-direction: row;
				.press-gap-pair {
					flex-grow: 1;
					flex-shrink: 10;
					display: flex;
					flex-direction: row;
					height: 1rem;
					overflow: hidden;
					span {
						font-size: 7pt;
					}
					.gap {
						background-color: $clr_heroTextBG_alpha;
					}
					span {
						display: block;
						position: relative;
						height: 100%;
						flex-grow: 1;
						flex-shrink: 10;
					}
				}
				padding: 0 .5rem;
				opacity: 0.8;
				box-shadow: .2rem .2rem .4rem $clr_formShadow;
			}
		}
	}
}

.sequence-info-overlay {
	font-size: 12pt;
	color: yellow;
	position: sticky;
	top: 40vh;
	left: 20vw;
	width: 20vw;
	height: 20vh;
}

#DotGraph {
	height: 100%; width: 100%;
	flex-grow: 5;
	border: 1px solid black;
	perspective-origin: -1500px 500px;
	transition: ease-in .3s 0.4s;
	.tablature {
		position: relative;
		left: 0;
		//left: calc((var(--graph-height) * 5vh) - 80vh);
		height: 1000vh;
		top: 0;
		padding: 0;
		overflow: visible;
		display: flex;
		flex-direction: row;
		transform-origin: 0 0;
		//scale: calc(.4 + (var(--zoom-level) / 100) - (var(--sequence-duration) / 20000));
		scale: calc(
			 .05 +
			 ((var(--sequence-duration) + 1500) / 1000000)
			 *
			 ((var(--zoom-level) + 1) / .2)
		);
		pointer-events: none;
		//* {
		//	font-size: calc(2pt + (var(--zoom-level) / 5));
		//}
		.press-gap-pair {
			display: flex;
			flex-direction: row;
			.gap,
			.press {
				overflow: hidden;
				display: inline-block;
				white-space: pre;
				transition: none;
				//height: calc(100vh - 3rem);
				transform-origin: center;
				flex-grow: 0;
				flex-shrink: 0;
				//transition: ease-in .3s 0.4s;
			}
			.press {
				border-left: .2pt solid $clr_heroTextBG_alpha;
				border-right: .2pt solid $clr_heroTextBG_alpha;
			}
			.gap {
				background-color: $clr_boxBG_alpha;
				//border: calc((var(--zoom-level) / 60) * 1pt) solid $clr_InterfaceBG_alpha;
			}
		}
		/* "Starts with" selector, meaning this would match "3" or anything starting with 3, like "3.14" */
		[data-begin^="1"] { }
		[data-duration^="1"] { }
	}
}

.MEDIUM #DotGraph {
	height: 50vh;
	width: 100%;
}

.HOT #DotGraph {
	height: 100%;
	width: 100%;
}

.control-group {
	//transform: scale(80%);
	width: 100%;
	position: sticky;
	bottom: 0;
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	border: $buttonBorder;
	border-radius: 0;
	background-color: $clr_white;
}

#CurrentSessionStatus {
	z-index: 100;
}

.range-slider {
	flex-shrink: 1;
	flex-grow: 1;
	width: 50%;
	height: 1rem;
	overflow: visible;
	input {
		width: 100%;
	}
	label {
		display: none;
		font-size: 10pt;
		position: relative;
		left: 0;
		top: 0;
		overflow: visible;
	}
	label:nth-child(2) {
		left: calc(20vw - 4em);
	}
	.slider-value {
		display: block;
		left: calc(10vw - .5em);
		top: -.3rem;
		font-size: 14pt;
		font-weight: 500;
	}
}

.floater {
	position: sticky;
	bottom: 3rem;
	width: 100%;
	border-radius: 0;
	border: none;
	background-color: $clr_InterfaceBG_alpha;
	opacity: 0.75;
	.range-slider {
		flex-shrink: 0;
		flex-grow: 0;
		width: 45%;
		margin: 2vw 0;
		overflow: visible !important;
		input {
			align-self: center;
			left: auto; right: auto;
			width: 90%;
			opacity: 0.75;
			box-shadow: $clr_formShadow 3pt 3pt 6pt;
		}
		.slider-value,
		.label {
			width: 100%;
			text-align: center;
			font-size: 3em;
			font-weight: 900;
			opacity: 0.5;
			color: white;
			filter: blur(1.5pt);
			left: 0;
			top: -2rem;
			pointer-events: none;
		}
	}
}

#Directions {

}

#DirectionsContent {
	width: 80%;
	p {
		white-space: normal;
		text-align: left;
		font-size: 14pt;
	}
}

[data-dg="1"] { --dg: 1; }

.props {
	--dg: 1;
	width: calc(100px * var(--dg));
	//width: calc(attr(data-gap) * .05px) !important;
	max-width: unset !important;
	min-width: unset !important;
}

.props::after {
	content: attr(data-gap);
	width: calc(attr(data-gap) * 1px) !important;
}

.recording {
	transition: ease-in .3s 0.4s;
	border: 4px dotted red;
	background-color: red !important;
}

.playing {
	transition: ease-in .3s 0.4s;
	border: 4px dotted green;
	background-color: green !important;
}

.stopped {
	transition: ease-in .3s 0.004s;
}

.instruction {
	position: sticky;
	z-index: 100;
	top: 0;
	font-size: 80%;
	line-height: 125%;
	font-weight: 900;
	background-color: white;
	padding: .25rem 1.25rem;
	border-radius: 0 0 1rem 1rem;
	//border: 1.5px solid white;
	color: #242442;
}

.MEDIUM .instruction,
.HOT .instruction,
#SoundBoardStatus.COLD .instruction {
	opacity: 0;
	height: 0;
	margin: 0;
	padding: 0;
}

.COLD .instruction {
	opacity: 1;
	width: 100%;
	height: $sz_COLD;
	border-radius: $sz_COLD;
	margin: 0;
	padding: .5rem;
}

.gray {background-color: gray;}

.white {background-color: white;}

.brown {background-color: brown;}

.blue {background-color: blue;}

.black {background-color: black;}

.red {background-color: red;}

.green {background-color: green;}

.yellow {background-color: yellow;}

.purple {background-color: rebeccapurple;}

.orange {background-color: orange;}

.findme {border: 10px solid red !important;}
