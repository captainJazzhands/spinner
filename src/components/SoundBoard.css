/*# sizes */
/* end sizes */
/*# Size Matrices */
/* end Size Matrices */
/*# colors */
/*# end colors */
/*# borders */
/* end borders */
#root {
  background-color: black;
}

.container {
  max-width: unset;
  width: 100vw;
  margin: 0;
  padding: 0;
}

#theScene {
  z-index: 10;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-color: rgb(26, 26, 26);
}

#ScoreBoard {
  order: 1;
  z-index: 99;
}
#ScoreBoard .turn {
  order: 1;
}
#ScoreBoard .status {
  order: 2;
}
#ScoreBoard .score {
  order: 3;
}

#theFloor {
  order: 2;
  z-index: 20;
  margin: 0;
  padding: 0;
  font-size: 2.5vh;
  line-height: 3.125vh;
  display: block;
  position: absolute;
  width: 100vw !important;
  height: 100vh !important;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  transition: all ease-in 1068ms;
  overflow: hidden;
}

#Frame {
  pointer-events: none;
  position: absolute;
  width: 100vw;
  height: 100vh;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 91;
}

#blackboard {
  background-image: url(gfx/Blackboard.svg);
  top: 55vh;
  bottom: 0;
}
@media (min-width: 1000px) {
  #blackboard {
    top: calc(2vh - 2px);
    left: 50vw;
    right: 0;
  }
}

#television {
  background-image: url(gfx/One_Hole.svg);
  background-color: hsl(0deg, 0%, 5%);
  z-index: 99 !important;
}

.tile {
  z-index: 50 !important;
  position: absolute;
}

#blackboard,
#television {
  position: absolute;
  width: 100vw;
  height: 45vh;
  background-position: center;
  transform: rotateY(-0.5deg) rotateX(-0.5deg) rotateZ(-0.5deg);
  transition: all ease-in 1428ms;
}
@media (min-width: 1000px) {
  #blackboard,
  #television {
    width: 50vw;
    height: 75vh;
  }
}

#television {
  background-size: 100vw 45vh;
}
@media (min-width: 1000px) {
  #television {
    background-size: 52.5vw 75vh;
  }
}

#blackboard {
  background-size: 100vw 45vh;
}
@media (min-width: 1000px) {
  #blackboard {
    background-size: 45vw 75vh;
  }
}

.onBlackboard {
  top: 58vh;
  bottom: 4vh;
  left: 5vw;
  right: 5vw;
  width: auto;
  height: auto;
  transform: rotateY(0.5deg) rotateX(0.5deg) rotateZ(0.5deg);
  transition: all ease-in 1530ms !important;
}
@media (min-width: 1000px) {
  .onBlackboard {
    top: calc(2vh - 2px);
    left: 52.5vw;
    right: 2.5vw;
    width: 45vw;
    transform: rotateY(1.5deg) rotateX(1.5deg) rotateZ(1.5deg);
  }
}
.onBlackboard div {
  color: hsl(0deg, 0%, 85%);
}

.onTelevision {
  top: 5vh;
  bottom: 60vh;
  left: 15vw;
  right: 15vw;
  width: auto;
  height: auto;
  border-radius: 4vw;
  transition: all ease-out 1638ms !important;
}
@media (min-width: 1000px) {
  .onTelevision {
    top: 7vh;
    bottom: 33vh;
    left: 7.5vw;
    right: 57.5vw;
  }
}

.intro #blackboard {
  top: 100vh !important;
  bottom: 0 !important;
  background-size: 100vw 0 !important;
}

#television .broderick code {
  text-align: center;
  position: absolute;
  left: 15vw;
  right: 85vw;
  top: 25vh;
  bottom: 50vh;
  height: 25vh;
  width: 70vw;
  font-size: 5vw;
  letter-spacing: 1pt;
  color: hsl(120deg, 90%, 50%);
}

.intro #television {
  width: 100vw;
  height: 100vh;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-size: 100vw 100vh !important;
  background-position: center center;
}

.intro #blackboard {
  top: -1vh;
  bottom: 101vh;
  left: 101vw;
  right: -1vw;
  transition: all ease-in 2448ms;
}

.intro .broderick {
  bottom: 0;
  background-size: 100vw 100vh !important;
  background-position: center center;
}
.intro .broderick code {
  left: -50vw;
  right: 150vw;
  letter-spacing: 5vw;
  color: hsla(120deg, 90%, 50%, 0);
}
.intro .broderick :hover {
  background-size: 80vw 80vh !important;
  transition: all ease-in 1914ms;
}

#HumaneInterfaceMask {
  display: none;
}

#ScoreBoard,
#enter,
#navigate {
  position: fixed;
  width: 100vw;
  top: calc(50vh - 7.5vw);
  height: 15vw;
  max-height: 12vh;
  transition: all ease-in 2400ms;
}
#ScoreBoard button,
#enter button,
#navigate button {
  max-height: 3em;
  background-color: rgb(26, 26, 26);
}
@media (min-width: 1000px) {
  #ScoreBoard,
  #enter,
  #navigate {
    width: 100vw;
    top: calc(100vh - 15vw);
  }
}
#ScoreBoard :is .offscreen,
#enter :is .offscreen,
#navigate :is .offscreen {
  left: 100vw;
}

.intro #ScoreBoard,
.intro #enter,
.intro #navigate {
  left: 100vw;
}

#enter,
#navigate {
  transform: translate3d(0, 0, 200px);
  z-index: 100 !important;
  width: 50%;
  color: hsl(0deg, 0%, 85%);
  background-color: unset;
  padding: 4vw;
}
#enter {
  left: unset;
  right: 0;
}

#navigate {
  left: 0;
  right: unset;
}

#start {
  z-index: 900 !important;
  position: absolute;
  height: 7.5vh;
  width: 25vw;
  left: 100vw;
  right: 100vw;
  top: 70vh;
  bottom: 25vh;
  letter-spacing: 0.25vh;
  font-size: 5vw;
}
#start :hover {
  letter-spacing: 2.5vh;
  box-shadow: inset 5px 5px 20px rgba(38, 48, 29, 0), -4px -4px 25px rgba(38, 48, 29, 0);
  transition: all ease-in 2160ms;
}

.intro #start {
  left: 40vw;
  right: 40vw;
}

.broderick code {
  opacity: 0;
}

.intro .broderick code {
  opacity: 1;
}

.intro {
  transition: all ease-in 2616ms !important;
}

:root {
  --scroll-distance: 2em;
}

@font-face {
  font-family: "LCD Mono";
  font-weight: 300;
  src: url("fonts/LCD-mono-Light.woff") format("woff"), url("fonts/LCD-mono-Light.ttf") format("truetype"); /* Safari, Android, iOS */
}
@font-face {
  font-family: "LCD Mono";
  font-weight: 500;
  src: url("fonts/LCD-mono-Normal.woff") format("woff"), url("fonts/LCD-mono-Normal.ttf") format("truetype"); /* Safari, Android, iOS */
}
@font-face {
  font-family: "LCD Mono";
  font-weight: 700;
  src: url("fonts/LCD-mono-Ultra.woff") format("woff"), url("fonts/LCD-mono-Ultra.ttf") format("truetype"); /* Safari, Android, iOS */
}
h1, h2, h3, h4, h5, h6, button {
  color: hsl(0deg, 0%, 85%);
  text-shadow: black 0.1rem 0.1rem 0.2rem;
  text-align: center;
}

button {
  margin: 0;
  padding: 0;
  white-space: nowrap;
  overflow: hidden;
  border: none;
  border-radius: 0;
  width: 100%;
  height: 100%;
  min-width: 3em;
  min-height: 3rem;
  text-transform: uppercase;
  font-weight: 900;
  font-size: 12pt;
  transition: ease-in 0.3s 0.14s;
  background-color: #a6e06c;
  opacity: 0.75;
  box-shadow: inset rgba(0, 0, 0, 0.8) 0.2rem 0.2rem 0.6rem;
}

.tintable button {
  padding: 6pt;
  border: 1px solid white;
  border-radius: 6pt;
}

button:focus {
  box-shadow: yellow 0.1rem 0.1rem 0.4rem;
}

button:hover,
button.selected {
  opacity: 1;
  box-shadow: white 0.01rem 0.01rem 1rem;
}

button:disabled {
  box-shadow: none;
  opacity: 0.5;
}

#pageLayout {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.box {
  margin: 2.5vw;
  display: flex;
  align-items: center;
  align-content: center;
  width: 90vw;
  max-width: 90vw;
  height: 100%;
  overflow: hidden;
  background-color: #242442;
  border-radius: 1rem;
  border: 1px solid white;
  transition: ease-in 0.3s 0.07s;
}
.box ul, .box div {
  transition: ease-in 0.3s 0.4s;
  text-align: center;
  flex-grow: 0;
  flex-shrink: 0;
  overflow: hidden;
  white-space: nowrap;
  color: hsl(0deg, 0%, 85%);
}
.box div {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  flex-wrap: nowrap;
  margin: 0.75rem;
}
.box h1 {
  color: hsl(240deg, 40%, 40%);
  -webkit-text-stroke: 0.025rem hsl(0deg, 0%, 5%);
  text-shadow: rgba(0, 0, 0, 0.8) 0.1rem 0.1rem 0.2rem;
  top: 0;
  margin-top: 0;
  padding: 0.5rem;
  width: 100%;
  border-radius: 2rem 2rem 0 0;
}

ul.buttonTile {
  list-style-type: none;
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 20%;
  overflow: hidden;
}
ul.buttonTile li {
  align-self: center;
  flex-direction: column;
  border: 1px solid white;
}
ul.buttonTile li .shortName {
  font-size: 12pt;
}
ul.buttonTile li .longName {
  font-size: 9pt;
  max-width: 12em !important;
}

#DataSelectorDiv {
  display: flex;
  flex-direction: column;
  flex-basis: content-box;
}
#DataSelectorDiv button {
  width: 80%;
  max-height: 6rem;
}

.DataSelectorList {
  display: grid;
  grid-template-columns: repeat(4, 0.1fr);
  grid-template-rows: repeat(2, 0.1fr);
  align-content: stretch;
  padding-left: 0;
}
.DataSelectorList li {
  list-style: none;
  font-size: 12pt;
  padding: 10pt 2pt;
}

#PartsOfSpeechList {
  grid-template-columns: repeat(6, 0.1fr);
  grid-template-rows: none;
}

#stroopSwitch {
  flex-direction: row;
  width: 100%;
}
#stroopSwitch button {
  writing-mode: vertical-lr;
  font-size: 3.5vw;
  padding: 1rem;
}
#stroopSwitch .voice,
#stroopSwitch .language {
  width: 100%;
  height: auto;
  overflow: scroll;
}
#stroopSwitch .voice button,
#stroopSwitch .language button {
  height: auto;
  width: auto;
  flex-shrink: 0;
  margin: 3pt 1pt;
  padding: 3pt 1em;
  line-height: 90%;
  color: black;
  text-shadow: none;
}

.HOT {
  flex-grow: 5;
  flex-shrink: 1;
  transition: ease-in 0.85s 0.001s;
}

.COLD {
  flex-grow: 1;
  flex-shrink: 2;
  transition: ease-out 0.4s 0.3s;
}

.unsure,
.text,
.speech,
.color,
.shape,
.sound,
.tone {
  transition: ease-in 0.25s 0.01s;
}

.unsure,
.unsure .tintable button {
  background-color: black;
}

.text,
.text .tintable button {
  background-color: blue;
}

.speech,
.speech .tintable button {
  background-color: red;
}

.color,
.color .tintable button {
  background-color: yellow;
}

.shape,
.shape .tintable button {
  background-color: green;
}

.sound,
.sound .tintable button {
  background-color: orange;
}

.tone,
.tone .tintable button {
  background-color: purple;
}

#SoundBoardStatus,
#CurrentButton {
  flex-direction: column;
}
#TheButtons {
  border-radius: 0;
  width: 100%;
  height: 100%;
  flex-direction: column;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto;
}
#TheButtons button {
  width: 100%;
  height: 100%;
  margin: 0;
  border: none;
  border-radius: 0;
  box-shadow: inset 3px 3px 5px rgba(0, 0, 0, 0.8);
}
#TheButtons button :hover {
  box-shadow: 7px 7px 10px rgba(0, 0, 0, 0.8);
}
#TheButtons button :active {
  box-shadow: inset 7px 7px 10px rgba(0, 0, 0, 0.8);
}

.LCD {
  background-color: #526652;
  color: #1a231a;
  overflow: hidden !important;
  border-radius: 0.5rem;
  padding: 0.5rem;
  box-shadow: inset 0.1vh 0.1vh 1vw #1a231a;
}

p.LCD {
  font-family: "LCD Mono", monospace;
  line-height: 90%;
  color: #1a231a;
  white-space: nowrap;
  margin: 0;
}

.meta {
  padding: 6pt;
}

.Countdown {
  width: 100%;
  border: 1px solid white;
  display: flex;
  flex-direction: row;
  align-items: center;
  align-content: space-evenly;
}
.Countdown button {
  text-align: center;
  word-spacing: 0.25em;
  letter-spacing: 0.25em;
}

#DotGraph {
  height: 100%;
  width: 100%;
  border: 1px solid black;
  overflow: hidden;
  perspective-origin: -1500px 500px;
  transition: ease-in 0.3s 0.4s;
}
#DotGraph ul {
  height: 100%;
  width: 100%;
  overflow: hidden;
}
#DotGraph ul li {
  position: absolute;
  transition: ease-in 0.3s 0.4s;
}

#DotGraph ul {
  width: 100%;
  bprder: 1px solid white;
  background-color: #242442;
}
#DotGraph ul li {
  display: inline-block;
}

[data-dg="1"] {
  --dg: 1;
}

.props {
  --dg: 1;
  width: calc(100px * var(--dg));
  max-width: unset !important;
  min-width: unset !important;
}

.props::after {
  content: attr(data-gap);
  width: calc(attr(data-gap) * 1px) !important;
}

.recording {
  transition: ease-in 0.3s 0.4s;
  border: 4px dotted red;
  background-color: red !important;
}

.playing {
  transition: ease-in 0.3s 0.4s;
  border: 4px dotted green;
  background-color: green !important;
}

.stopped,
.cold {
  transition: ease-in 0.3s 0.4s;
}

.gray {
  background-color: gray;
}

.white {
  background-color: white;
}

.brown {
  background-color: brown;
}

.black {
  background-color: black;
}

.red {
  background-color: red;
}

.yellow {
  background-color: yellow;
}

.orange {
  background-color: orange;
}

.findme {
  border: 10px solid red !important;
}

/*# sourceMappingURL=SoundBoard.css.map */
